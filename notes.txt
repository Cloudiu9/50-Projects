Day 7: Split Landing Page

1. 100% vs viewport width/height

width: 100%

    Relative to the parent element’s width

    If the parent is smaller than the viewport, 100% is smaller than 100vw

width: 100vw

    Relative to the entire viewport width, regardless of parent

    Always equals the full browser width (1vw = 1% of viewport width)

2. When using pseudoselector ::before or ::after, you must set content = ''

3. We can define 'global variables' on the root scope (useful for reusing colors)
    :root{
        --left-bg-color: rgba(87,84,236,0.7) /* rgb alpha ==> alpha is transparency */
    }

4. Positioning a text element in the middle:
h1 {
  font-size: 4rem;
  color: white;
  position: absolute;
  left: 50%;
  top: 20%;
  transform: translateX(-50%); /* middle of h1 in the middle */
  white-space: nowrap; /* don't wrap on next line */
}
.btn {
  position: absolute; /* within its container/side */
  /* make the text inside centered */
  display: flex;           IMP
  align-items: center;     IMP
  justify-content: center; IMP
  left: 50%;
  top: 40%;
  transform: translateX((-50%));
  text-decoration: none; /* remove underline */
  color: white;
  border: white solid 0.2rem;
  font-size: 1rem;
  font-weight: bold;
  text-transform: uppercase;
  width: 15rem;
  padding: 1.5rem;
}

Day 8: Wave Input Form
We want to use JavaScript to wrap each letter in a span
==> smooth transition and delay (transform translateY value to move it up)

.btn:active {
  transform: scale(0.98); /* from 1 to .98, adds a little effect when clicked */
}

  transform: translateY(-30px); /* negative number moves it up */

.form-control label span {
  display: inline-block;
  font-size: 18px;
  min-width: 5px;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55); /* variable speed for transition (a curve) */
}

Day 9: Sound Board
/* creating the buttons dynamically from an array */

const sounds = ['applause', 'boo', 'gasp', 'tada', 'victory', 'wrong']

sounds.forEach(sound => {
    const btn = document.createElement('button')
    btn.classList.add('btn')

    btn.innerText = sound /* from the 'sounds' array */

    document.getElementById('buttons').appendChild(btn)
})

Day 10: Dad Jokes
-- auto horizontally centers the block element by equally distributing leftover horizontal space on both sides.

margin: 50px auto 


-- cleaner and more readable than just using .then
-- needs to have Accept header
async function generateJoke() {
  const config = {
    headers: {
      Accept: "application/json",
    },
  };

  const res = await fetch("https://icanhazdadjoke.com/", config);

  const data = await res.json();

  jokeEl.innerHTML = data.joke;
}

Day 11: Event KeyCodes
IMP
Instead of hiding/showing classes (classList.add/remove/toggle), you can just insert what you need with div.innerHTML:
window.addEventListener("keydown", (e) => {
  insert.innerHTML = `        <div class="key">
          ${e.key === " " ? "Space" : e.key}
          <small>event.key</small>
        </div>
        <div class="key">
          ${e.keyCode}
          <small id="keyCode">event.keyCode</small>
        </div>
        <div class="key">
          ${e.code}
          <small id="code">event.code</small>
        </div>`;
});

Day 12: FAQ Collapse
dribble.com (inspiration for projects) IMP

Toggle a class on the parent node IMP

btns.forEach((btn) => {
  btn.addEventListener("click", () => {
    btn.parentNode.classList.toggle("active");
  });
});

Day 14: Animated Navigation

  background-image: linear-gradient(
    to bottom,
    #eafbff 0%,
    #eafbff 50%,
    #5290f9 50%,
    #5290f9 100%
  ); /* split color */


// applies transition when width changes
// takes 0.6s
// same speed throughout (linear)
  transition: width 0.6s linear;

  
/* removes outline on hover */
.icon:focus {
  outline: 0;
}

Day 15: Incrementing Counter

Social media font awesome icons have the class 'fab'
fa-3x makes icon bigger

      <i class="fab fa-twitter fa-3x"></i>

IMP When alligning text in the middle:

.counter-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  margin: 30px 50px;
}

.counter {
  font-size: 60px;
  margin-top: 10px;
}

IMP Easy universal media-query (maybe?)

@media (max-width: 580px) {
  body {
    flex-direction: column;
  }
}
Day 16: Drink Water

.container {
  display: flex;
  justify-content: center; /* centers item horizontally */
  align-items: center;     /* centers item vertically */
  text-align: center;  /* centers text inside the item */
}

// make items flow over to the next row

.cups {
  display: flex;
  flex-wrap: wrap;
  width: 280px;
}

// content inside .remained gets vertically centered within that extra space. (flex: 1)
// flex: 1 → "fill all remaining space"

.remained {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  flex: 1; /* puts it in the middle? */
}

// add event listener to multiple elements at once

smallCups.forEach((cup, idx) => {
    cup,addEventListener('click', () => highlightCups(idx))
});


Day 17: Movie App

// hide element out of view (move it below)

.overview {
  background-color: white;
  padding: 2rem;
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  max-height: 100%;
  transform: translateY(101%); /* pushes it down 100% and 1% out of view */
}

Day 18: Background Slider

// use this for fitting background images 
  background-image: url("https://plus.unsplash.com/premium_photo-1673105873283-33d329cbe3b0?q=80&w=687&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D");
  background-position: center center;
  background-size: cover;


// when using before or after, we have to add this:

  body::before{
  content:''
}

// transform: translateY(-50%); /* moves to the EXACT middle */

Day 19: Theme Clock

// center circle directly in the middle of position relative container

.center-point {
  background-color: #e74c3c;
  width: 10px;
  height: 10px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -100%); /* puts it directly in the middle */
  border-radius: 50%; /* makes it a circle */
}

Day 20: Button Ripple

// cool ripple effect for buttons

button .circle {
  position: absolute;
  background-color: white;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0); /* middle */
  animation: scale 0.5s ease-out;
}

/* animation */
@keyframes scale {
  /* go from original scale of 0 up TO 3 */
  to {
    transform: translate(-50%, -50%) scale(3);
    opacity: 0; /* as it scales up, it dissapears */
  }
}

Day 21: Drag N Drop
// making a div draggable

      <div class="fill" draggable="true"></div>

// which then fires off all of these events:

  fill.addEventListener("dragstart", dragStart);
  fill.addEventListener("dragend", dragEnd);
  empty.addEventListener("dragover", dragOver);
  empty.addEventListener("dragenter", dragEnter);
  empty.addEventListener("dragleave", dragLeave);
  empty.addEventListener("dop", dragDrop);

Day 22: Drawing Pad

/* targets all direct children of toolbox */
.toolbox > * {
  background-color: white;
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  height: 50px;
  width: 50px;
  margin: 0.25rem;
  padding: 0.25rem;
}

/* targets last child of toolbox */
.toolbox > *:last-child {
  margin-left: auto;
}

Day 23: Kinetic Loader
/* making a triangle in css */
.kinetic::after,
.kinetic::before {
  /* have to use with after/before */
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 0;
  width: 0;
  border: 50px solid transparent;
  border-bottom-color: white;
}